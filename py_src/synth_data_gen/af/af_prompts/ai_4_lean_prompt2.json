{
    "gpt_assistant_prompt": "You are an expert in the Lean formal math language.",
    "gpt_user_prompt": "At the end of this explanation, I will give you 2 things. The first is a list of tuples that are the translations of entire proofs written in Lean, which we will denote the formal language, to plain English, also known as natural language, as tuples or pairs. This is not an exhaustive list, these are just examples of informalizations. I will then have a proof written in Lean represented as a string following the newline character after the list of pairs.\nGive me the tuple pair of the proof I give you written in Lean and what you think their natural language equivalent is given your knowledge of Lean, formatted using LaTeX. Do not output anything else, just the python tuple I requested. In your output match the exact format \"('formal', 'informal')\"\n[\"theorem exists_le_sylow {p : ℕ} {G : Type*} [group G] {P : subgroup G} \n (hP : is_p_group p P) : \n ∃ (Q : sylow p G), P ≤ Q :=\", \"Let $P$ be a $p$-subgroup of $G$. Then $P$ is contained in a Sylow $p$-subgroup of $G$.\"),(\"theorem exists_eq_const_of_bounded {E : Type u} [normed_group E] \n [normed_space ℂ E] {F : Type v} [normed_group F] [normed_space ℂ F] \n {f : E → F} (hf : differentiable ℂ f) (hb : metric.bounded (set.range f)) : \n ∃ (c : F), f = function.const E c :=\", \"Let $E$ and $F$ be complex normed spaces and let $f:E\\to F$. If $f$ is differentiable and bounded, then $f$ is constant.\"), (\"theorem subset_of_open_subset_is_open (X : Type*) [topological_space X] \n (A : set X) (hA : ∀ x ∈ A, ∃ U : set X, is_open U ∧ x ∈ U ∧ U ⊆ A): \n is_open A :=\",\"Let $X$ be a topological space; let $A$ be a subset of $X$. Suppose that for each $x\\in A$ there is an open set $U$ containing $x$ such that $U\\subset A$. Then $A$ is open in $X$.\"), (\"theorem is_multiplicative.eq_iff_eq_on_prime_powers {R : Type*} \n [comm_monoid_with_zero R] (f : nat.arithmetic_function R) \n (hf : f.is_multiplicative) (g : nat.arithmetic_function R) \n (hg : g.is_multiplicative) : \n f = g ↔ ∀ (p i : ℕ), nat.prime p → f (p ^ i) = g (p ^ i) :=\",\"Two multiplicative functions $f, g:\\mathbb{N}\\to R$ are equal if and only if $f(p^i)=f(g^i)$ for all primes $p$.\"), (\"theorem abs_sum_leq_sum_abs (n : ℕ) (f : ℕ → ℂ) : \n abs (∑ i in finset.range n, f i) ≤ ∑ i in finset.range n, abs (f i) :=\",\"If $z_1, \\\\dots, z_n$ are complex, then $|z_1 + z_2 + \\\\dots + z_n|\\\\leq |z_1| + |z_2| + \\\\dots + |z_n|\".), (\"theorem distinct_powers_of_infinite_order_element (G : Type*) [group G] (x : G) \n (hx_inf : ∀ n : ℕ, x ^ n ≠ 1) : \n ∀ m n : ℤ, m ≠ n → x ^ m ≠ x ^ n :=\",\"If $x$ is an element of infinite order in $G$, prove that the elements $x^n$, $n\\\\in\\\\mathbb{Z}$ are all distinct.\")]\n"
  }
  